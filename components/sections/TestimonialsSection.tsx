import {client, queries, type TestimonialNew} from '@/lib/sanity';
import TestimonialsClient from './TestimonialsClient';

export const revalidate = 3600; // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å (–∏–ª–∏ –ø–æ webhook)

export default async function TestimonialsSection() {
  let testimonials: TestimonialNew[] = [];

  try {
    testimonials = await client.fetch<TestimonialNew[]>(queries.testimonials);
    console.log('‚úÖ Testimonials loaded:', testimonials.length);
    
    // –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ testimonial
    testimonials.forEach((t, i) => {
      console.log(`üìù Testimonial ${i + 1}:`, {
        author: t.author,
        hasMedia: t.hasMedia,
        mediaType: t.mediaType,
        videoSource: t.videoSource,
        hasVideoFile: !!t.mediaVideoFile,
        hasVideoUrl: !!t.mediaVideoUrl,
        videoUrl: t.mediaVideoUrl,
      });
    });
  } catch (error) {
    console.error('‚ùå Error fetching testimonials:', error);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
    return null;
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é
  if (!testimonials || testimonials.length === 0) {
    console.log('‚ÑπÔ∏è No testimonials found in Sanity');
    return null;
  }

  return <TestimonialsClient testimonials={testimonials} />;
}
